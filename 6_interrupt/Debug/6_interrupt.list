
6_interrupt.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000194  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000270  08000194  08000194  00001194  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000404  0800040c  0000140c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000404  08000404  0000140c  2**0
                  CONTENTS
  4 .ARM          00000000  08000404  08000404  0000140c  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000404  0800040c  0000140c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000404  08000404  00001404  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  08000408  08000408  00001408  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000000  20000000  20000000  0000140c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  0000140c  2**0
                  CONTENTS
 10 .bss          0000001c  20000000  20000000  00002000  2**2
                  ALLOC
 11 ._user_heap_stack 00000604  2000001c  2000001c  00002000  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  0000140c  2**0
                  CONTENTS, READONLY
 13 .debug_info   00000a03  00000000  00000000  0000143c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 0000029c  00000000  00000000  00001e3f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000080  00000000  00000000  000020e0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 00000052  00000000  00000000  00002160  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00000e65  00000000  00000000  000021b2  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00000ba5  00000000  00000000  00003017  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    00076366  00000000  00000000  00003bbc  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000043  00000000  00000000  00079f22  2**0
                  CONTENTS, READONLY
 21 .debug_frame  000000ec  00000000  00000000  00079f68  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_line_str 00000065  00000000  00000000  0007a054  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000194 <__do_global_dtors_aux>:
 8000194:	b510      	push	{r4, lr}
 8000196:	4c05      	ldr	r4, [pc, #20]	@ (80001ac <__do_global_dtors_aux+0x18>)
 8000198:	7823      	ldrb	r3, [r4, #0]
 800019a:	b933      	cbnz	r3, 80001aa <__do_global_dtors_aux+0x16>
 800019c:	4b04      	ldr	r3, [pc, #16]	@ (80001b0 <__do_global_dtors_aux+0x1c>)
 800019e:	b113      	cbz	r3, 80001a6 <__do_global_dtors_aux+0x12>
 80001a0:	4804      	ldr	r0, [pc, #16]	@ (80001b4 <__do_global_dtors_aux+0x20>)
 80001a2:	f3af 8000 	nop.w
 80001a6:	2301      	movs	r3, #1
 80001a8:	7023      	strb	r3, [r4, #0]
 80001aa:	bd10      	pop	{r4, pc}
 80001ac:	20000000 	.word	0x20000000
 80001b0:	00000000 	.word	0x00000000
 80001b4:	080003ec 	.word	0x080003ec

080001b8 <frame_dummy>:
 80001b8:	b508      	push	{r3, lr}
 80001ba:	4b03      	ldr	r3, [pc, #12]	@ (80001c8 <frame_dummy+0x10>)
 80001bc:	b11b      	cbz	r3, 80001c6 <frame_dummy+0xe>
 80001be:	4903      	ldr	r1, [pc, #12]	@ (80001cc <frame_dummy+0x14>)
 80001c0:	4803      	ldr	r0, [pc, #12]	@ (80001d0 <frame_dummy+0x18>)
 80001c2:	f3af 8000 	nop.w
 80001c6:	bd08      	pop	{r3, pc}
 80001c8:	00000000 	.word	0x00000000
 80001cc:	20000004 	.word	0x20000004
 80001d0:	080003ec 	.word	0x080003ec

080001d4 <__NVIC_EnableIRQ>:
  \details Enables a device specific interrupt in the NVIC interrupt controller.
  \param [in]      IRQn  Device specific interrupt number.
  \note    IRQn must not be negative.
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
 80001d4:	b480      	push	{r7}
 80001d6:	b083      	sub	sp, #12
 80001d8:	af00      	add	r7, sp, #0
 80001da:	4603      	mov	r3, r0
 80001dc:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 80001de:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80001e2:	2b00      	cmp	r3, #0
 80001e4:	db0b      	blt.n	80001fe <__NVIC_EnableIRQ+0x2a>
  {
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80001e6:	79fb      	ldrb	r3, [r7, #7]
 80001e8:	f003 021f 	and.w	r2, r3, #31
 80001ec:	4907      	ldr	r1, [pc, #28]	@ (800020c <__NVIC_EnableIRQ+0x38>)
 80001ee:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80001f2:	095b      	lsrs	r3, r3, #5
 80001f4:	2001      	movs	r0, #1
 80001f6:	fa00 f202 	lsl.w	r2, r0, r2
 80001fa:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
  }
}
 80001fe:	bf00      	nop
 8000200:	370c      	adds	r7, #12
 8000202:	46bd      	mov	sp, r7
 8000204:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000208:	4770      	bx	lr
 800020a:	bf00      	nop
 800020c:	e000e100 	.word	0xe000e100

08000210 <pa0_exti_init>:
#define GPIOAEN			(1U << 17)
#define SYSCFGEN		(1U << 0)

#include "exti.h"

void pa0_exti_init(void){
 8000210:	b580      	push	{r7, lr}
 8000212:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8000214:	b672      	cpsid	i
}
 8000216:	bf00      	nop
	//Disable global interrupt
	__disable_irq();

	//Enable global access GPIOA
	RCC -> AHBENR |= GPIOAEN;
 8000218:	4b18      	ldr	r3, [pc, #96]	@ (800027c <pa0_exti_init+0x6c>)
 800021a:	695b      	ldr	r3, [r3, #20]
 800021c:	4a17      	ldr	r2, [pc, #92]	@ (800027c <pa0_exti_init+0x6c>)
 800021e:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8000222:	6153      	str	r3, [r2, #20]

	//Set PA0 as input pin
	GPIOA -> MODER &=~ (1U << 0);
 8000224:	f04f 4390 	mov.w	r3, #1207959552	@ 0x48000000
 8000228:	681b      	ldr	r3, [r3, #0]
 800022a:	f04f 4290 	mov.w	r2, #1207959552	@ 0x48000000
 800022e:	f023 0301 	bic.w	r3, r3, #1
 8000232:	6013      	str	r3, [r2, #0]
	GPIOA -> MODER &=~ (1U << 1);
 8000234:	f04f 4390 	mov.w	r3, #1207959552	@ 0x48000000
 8000238:	681b      	ldr	r3, [r3, #0]
 800023a:	f04f 4290 	mov.w	r2, #1207959552	@ 0x48000000
 800023e:	f023 0302 	bic.w	r3, r3, #2
 8000242:	6013      	str	r3, [r2, #0]

	//Enable clock access to SYSCFG
	RCC -> APB1ENR |= SYSCFGEN;
 8000244:	4b0d      	ldr	r3, [pc, #52]	@ (800027c <pa0_exti_init+0x6c>)
 8000246:	69db      	ldr	r3, [r3, #28]
 8000248:	4a0c      	ldr	r2, [pc, #48]	@ (800027c <pa0_exti_init+0x6c>)
 800024a:	f043 0301 	orr.w	r3, r3, #1
 800024e:	61d3      	str	r3, [r2, #28]

	//Select port A for EXTI0
	SYSCFG -> EXTICR[0] = 0;	//Since to connect pin 0 of port A we need 0000
 8000250:	4b0b      	ldr	r3, [pc, #44]	@ (8000280 <pa0_exti_init+0x70>)
 8000252:	2200      	movs	r2, #0
 8000254:	609a      	str	r2, [r3, #8]

	//Unmase EXTI0
	EXTI -> IMR |= (1U << 0);
 8000256:	4b0b      	ldr	r3, [pc, #44]	@ (8000284 <pa0_exti_init+0x74>)
 8000258:	681b      	ldr	r3, [r3, #0]
 800025a:	4a0a      	ldr	r2, [pc, #40]	@ (8000284 <pa0_exti_init+0x74>)
 800025c:	f043 0301 	orr.w	r3, r3, #1
 8000260:	6013      	str	r3, [r2, #0]

	//Select falling edge trigger
	EXTI -> FTSR |= (1U << 0);
 8000262:	4b08      	ldr	r3, [pc, #32]	@ (8000284 <pa0_exti_init+0x74>)
 8000264:	68db      	ldr	r3, [r3, #12]
 8000266:	4a07      	ldr	r2, [pc, #28]	@ (8000284 <pa0_exti_init+0x74>)
 8000268:	f043 0301 	orr.w	r3, r3, #1
 800026c:	60d3      	str	r3, [r2, #12]

	//Enable EXTI0 line in NVIC
	NVIC_EnableIRQ(EXTI0_IRQn);
 800026e:	2006      	movs	r0, #6
 8000270:	f7ff ffb0 	bl	80001d4 <__NVIC_EnableIRQ>
  __ASM volatile ("cpsie i" : : : "memory");
 8000274:	b662      	cpsie	i
}
 8000276:	bf00      	nop

	//Enable global interrupt
	__enable_irq();

}
 8000278:	bf00      	nop
 800027a:	bd80      	pop	{r7, pc}
 800027c:	40021000 	.word	0x40021000
 8000280:	40010000 	.word	0x40010000
 8000284:	40010400 	.word	0x40010400

08000288 <main>:
#define PIN9			(1U << 9)
#define PIN8			(1U << 8)

static void exti_callback(void);

int main(void){
 8000288:	b580      	push	{r7, lr}
 800028a:	b082      	sub	sp, #8
 800028c:	af00      	add	r7, sp, #0

	//Enable clock access GPIOE
	RCC -> AHBENR |= GPIOEEN;
 800028e:	4b1b      	ldr	r3, [pc, #108]	@ (80002fc <main+0x74>)
 8000290:	695b      	ldr	r3, [r3, #20]
 8000292:	4a1a      	ldr	r2, [pc, #104]	@ (80002fc <main+0x74>)
 8000294:	f443 1300 	orr.w	r3, r3, #2097152	@ 0x200000
 8000298:	6153      	str	r3, [r2, #20]

	//Set PE9 to output mode
	GPIOE -> MODER |= (1U << 18);
 800029a:	4b19      	ldr	r3, [pc, #100]	@ (8000300 <main+0x78>)
 800029c:	681b      	ldr	r3, [r3, #0]
 800029e:	4a18      	ldr	r2, [pc, #96]	@ (8000300 <main+0x78>)
 80002a0:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 80002a4:	6013      	str	r3, [r2, #0]
	GPIOE -> MODER &=~(1U << 19);
 80002a6:	4b16      	ldr	r3, [pc, #88]	@ (8000300 <main+0x78>)
 80002a8:	681b      	ldr	r3, [r3, #0]
 80002aa:	4a15      	ldr	r2, [pc, #84]	@ (8000300 <main+0x78>)
 80002ac:	f423 2300 	bic.w	r3, r3, #524288	@ 0x80000
 80002b0:	6013      	str	r3, [r2, #0]

	//Set PE8 to output mode
	GPIOE -> MODER |= (1U << 16);
 80002b2:	4b13      	ldr	r3, [pc, #76]	@ (8000300 <main+0x78>)
 80002b4:	681b      	ldr	r3, [r3, #0]
 80002b6:	4a12      	ldr	r2, [pc, #72]	@ (8000300 <main+0x78>)
 80002b8:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 80002bc:	6013      	str	r3, [r2, #0]
	GPIOE -> MODER &=~(1U << 17);
 80002be:	4b10      	ldr	r3, [pc, #64]	@ (8000300 <main+0x78>)
 80002c0:	681b      	ldr	r3, [r3, #0]
 80002c2:	4a0f      	ldr	r2, [pc, #60]	@ (8000300 <main+0x78>)
 80002c4:	f423 3300 	bic.w	r3, r3, #131072	@ 0x20000
 80002c8:	6013      	str	r3, [r2, #0]

	GPIOE -> ODR ^= PIN9;
 80002ca:	4b0d      	ldr	r3, [pc, #52]	@ (8000300 <main+0x78>)
 80002cc:	695b      	ldr	r3, [r3, #20]
 80002ce:	4a0c      	ldr	r2, [pc, #48]	@ (8000300 <main+0x78>)
 80002d0:	f483 7300 	eor.w	r3, r3, #512	@ 0x200
 80002d4:	6153      	str	r3, [r2, #20]

	pa0_exti_init();
 80002d6:	f7ff ff9b 	bl	8000210 <pa0_exti_init>

	while(1){
		GPIOE -> ODR ^= PIN8;
 80002da:	4b09      	ldr	r3, [pc, #36]	@ (8000300 <main+0x78>)
 80002dc:	695b      	ldr	r3, [r3, #20]
 80002de:	4a08      	ldr	r2, [pc, #32]	@ (8000300 <main+0x78>)
 80002e0:	f483 7380 	eor.w	r3, r3, #256	@ 0x100
 80002e4:	6153      	str	r3, [r2, #20]
		for (int i = 0; i < 100000; i++){}
 80002e6:	2300      	movs	r3, #0
 80002e8:	607b      	str	r3, [r7, #4]
 80002ea:	e002      	b.n	80002f2 <main+0x6a>
 80002ec:	687b      	ldr	r3, [r7, #4]
 80002ee:	3301      	adds	r3, #1
 80002f0:	607b      	str	r3, [r7, #4]
 80002f2:	687b      	ldr	r3, [r7, #4]
 80002f4:	4a03      	ldr	r2, [pc, #12]	@ (8000304 <main+0x7c>)
 80002f6:	4293      	cmp	r3, r2
 80002f8:	ddf8      	ble.n	80002ec <main+0x64>
		GPIOE -> ODR ^= PIN8;
 80002fa:	e7ee      	b.n	80002da <main+0x52>
 80002fc:	40021000 	.word	0x40021000
 8000300:	48001000 	.word	0x48001000
 8000304:	0001869f 	.word	0x0001869f

08000308 <exti_callback>:
	}
}

static void exti_callback(void){
 8000308:	b480      	push	{r7}
 800030a:	af00      	add	r7, sp, #0
	GPIOE -> ODR ^= PIN9;
 800030c:	4b05      	ldr	r3, [pc, #20]	@ (8000324 <exti_callback+0x1c>)
 800030e:	695b      	ldr	r3, [r3, #20]
 8000310:	4a04      	ldr	r2, [pc, #16]	@ (8000324 <exti_callback+0x1c>)
 8000312:	f483 7300 	eor.w	r3, r3, #512	@ 0x200
 8000316:	6153      	str	r3, [r2, #20]
}
 8000318:	bf00      	nop
 800031a:	46bd      	mov	sp, r7
 800031c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000320:	4770      	bx	lr
 8000322:	bf00      	nop
 8000324:	48001000 	.word	0x48001000

08000328 <EXTI0_IRQHandler>:

void EXTI0_IRQHandler(void){
 8000328:	b580      	push	{r7, lr}
 800032a:	af00      	add	r7, sp, #0
	if((EXTI -> PR & (1U << 0)) != 0){
 800032c:	4b07      	ldr	r3, [pc, #28]	@ (800034c <EXTI0_IRQHandler+0x24>)
 800032e:	695b      	ldr	r3, [r3, #20]
 8000330:	f003 0301 	and.w	r3, r3, #1
 8000334:	2b00      	cmp	r3, #0
 8000336:	d007      	beq.n	8000348 <EXTI0_IRQHandler+0x20>

		//clear PR flag
		EXTI -> PR |= (1U <<0);
 8000338:	4b04      	ldr	r3, [pc, #16]	@ (800034c <EXTI0_IRQHandler+0x24>)
 800033a:	695b      	ldr	r3, [r3, #20]
 800033c:	4a03      	ldr	r2, [pc, #12]	@ (800034c <EXTI0_IRQHandler+0x24>)
 800033e:	f043 0301 	orr.w	r3, r3, #1
 8000342:	6153      	str	r3, [r2, #20]

		//Do something
		exti_callback();
 8000344:	f7ff ffe0 	bl	8000308 <exti_callback>
	}
}
 8000348:	bf00      	nop
 800034a:	bd80      	pop	{r7, pc}
 800034c:	40010400 	.word	0x40010400

08000350 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000350:	480d      	ldr	r0, [pc, #52]	@ (8000388 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000352:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000354:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000358:	480c      	ldr	r0, [pc, #48]	@ (800038c <LoopForever+0x6>)
  ldr r1, =_edata
 800035a:	490d      	ldr	r1, [pc, #52]	@ (8000390 <LoopForever+0xa>)
  ldr r2, =_sidata
 800035c:	4a0d      	ldr	r2, [pc, #52]	@ (8000394 <LoopForever+0xe>)
  movs r3, #0
 800035e:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000360:	e002      	b.n	8000368 <LoopCopyDataInit>

08000362 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000362:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000364:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000366:	3304      	adds	r3, #4

08000368 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000368:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800036a:	428c      	cmp	r4, r1
  bcc CopyDataInit
 800036c:	d3f9      	bcc.n	8000362 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800036e:	4a0a      	ldr	r2, [pc, #40]	@ (8000398 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000370:	4c0a      	ldr	r4, [pc, #40]	@ (800039c <LoopForever+0x16>)
  movs r3, #0
 8000372:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000374:	e001      	b.n	800037a <LoopFillZerobss>

08000376 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000376:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000378:	3204      	adds	r2, #4

0800037a <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800037a:	42a2      	cmp	r2, r4
  bcc FillZerobss
 800037c:	d3fb      	bcc.n	8000376 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800037e:	f000 f811 	bl	80003a4 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000382:	f7ff ff81 	bl	8000288 <main>

08000386 <LoopForever>:

LoopForever:
  b LoopForever
 8000386:	e7fe      	b.n	8000386 <LoopForever>
  ldr   r0, =_estack
 8000388:	2000a000 	.word	0x2000a000
  ldr r0, =_sdata
 800038c:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000390:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 8000394:	0800040c 	.word	0x0800040c
  ldr r2, =_sbss
 8000398:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 800039c:	2000001c 	.word	0x2000001c

080003a0 <ADC1_2_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80003a0:	e7fe      	b.n	80003a0 <ADC1_2_IRQHandler>
	...

080003a4 <__libc_init_array>:
 80003a4:	b570      	push	{r4, r5, r6, lr}
 80003a6:	4d0d      	ldr	r5, [pc, #52]	@ (80003dc <__libc_init_array+0x38>)
 80003a8:	4c0d      	ldr	r4, [pc, #52]	@ (80003e0 <__libc_init_array+0x3c>)
 80003aa:	1b64      	subs	r4, r4, r5
 80003ac:	10a4      	asrs	r4, r4, #2
 80003ae:	2600      	movs	r6, #0
 80003b0:	42a6      	cmp	r6, r4
 80003b2:	d109      	bne.n	80003c8 <__libc_init_array+0x24>
 80003b4:	4d0b      	ldr	r5, [pc, #44]	@ (80003e4 <__libc_init_array+0x40>)
 80003b6:	4c0c      	ldr	r4, [pc, #48]	@ (80003e8 <__libc_init_array+0x44>)
 80003b8:	f000 f818 	bl	80003ec <_init>
 80003bc:	1b64      	subs	r4, r4, r5
 80003be:	10a4      	asrs	r4, r4, #2
 80003c0:	2600      	movs	r6, #0
 80003c2:	42a6      	cmp	r6, r4
 80003c4:	d105      	bne.n	80003d2 <__libc_init_array+0x2e>
 80003c6:	bd70      	pop	{r4, r5, r6, pc}
 80003c8:	f855 3b04 	ldr.w	r3, [r5], #4
 80003cc:	4798      	blx	r3
 80003ce:	3601      	adds	r6, #1
 80003d0:	e7ee      	b.n	80003b0 <__libc_init_array+0xc>
 80003d2:	f855 3b04 	ldr.w	r3, [r5], #4
 80003d6:	4798      	blx	r3
 80003d8:	3601      	adds	r6, #1
 80003da:	e7f2      	b.n	80003c2 <__libc_init_array+0x1e>
 80003dc:	08000404 	.word	0x08000404
 80003e0:	08000404 	.word	0x08000404
 80003e4:	08000404 	.word	0x08000404
 80003e8:	08000408 	.word	0x08000408

080003ec <_init>:
 80003ec:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80003ee:	bf00      	nop
 80003f0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80003f2:	bc08      	pop	{r3}
 80003f4:	469e      	mov	lr, r3
 80003f6:	4770      	bx	lr

080003f8 <_fini>:
 80003f8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80003fa:	bf00      	nop
 80003fc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80003fe:	bc08      	pop	{r3}
 8000400:	469e      	mov	lr, r3
 8000402:	4770      	bx	lr
